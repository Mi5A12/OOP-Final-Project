/*
  ==============================================================================
    This file was auto-generated!
  ==============================================================================
*/

#include "../JuceLibraryCode/JuceHeader.h"
#include "MainComponent.h"

class OtoDecksApplication  : public JUCEApplication
{
public:
    
    OtoDecksApplication() {}
    const String getApplicationName() override       { return ProjectInfo::projectName; }
    const String getApplicationVersion() override    { return ProjectInfo::versionString; }
    bool moreThanOneInstanceAllowed() override       { return true; }

    void initialise (const String& commandLine) override
    {
        // The initialization code for your application should go in this method.

        mainWindow.reset (new MainWindow (getApplicationName()));
    }

    void shutdown() override
    {
        // Include the shutdown code for your program here.

        mainWindow = nullptr; // (deletes our window)
    }

    void systemRequestedQuit() override
    {
        // When the app is asked to close, this is called: You can disregard this.
        //Call quit() to allow the app to close, or submit the request and allow the program to continue operating.
        quit();
    }

    void anotherInstanceStarted (const String& commandLine) override
    {
        //This method is called when another instance of the application is launched while this one is still operating. The commandLine parameter indicates the command-line arguments used by the other instance.
    }

    
    //This class implements the desktop window that holds a MainComponent class object.
        
    class MainWindow    : public DocumentWindow
    {
    public:
        MainWindow (String name)  : DocumentWindow (name,
                                                    Desktop::getInstance().getDefaultLookAndFeel()
                                                                          .findColour (ResizableWindow::backgroundColourId),
                                                    DocumentWindow::allButtons)
        {
            setUsingNativeTitleBar (true);
            setContentOwned (new MainComponent(), true);

           #if JUCE_IOS || JUCE_ANDROID
            setFullScreen (true);
           #else
            setResizable (true, true);
            centreWithSize (getWidth(), getHeight());
           #endif

            setVisible (true);
        }

        void closeButtonPressed() override
        {
            //When the user tries to close this window, this is called. For now, we'll simply ask the program to close when this occurs, but you can modify this to accomplish anything else you require.
            JUCEApplication::getInstance()->systemRequestedQuit();
        }

        

    private:
        JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (MainWindow)
    };

private:
    std::unique_ptr<MainWindow> mainWindow;
};

// The main() function, which starts the application, is generated by this macro.
START_JUCE_APPLICATION (OtoDecksApplication)
